import !vec:/usr/lib/vector {Vec3}

let age, sex', country = /hello/
var ...fish' = "Hello"

a+b
# a+ b 
a + b
# a +b 
a++b
# a+ +b
a+b+
# a + b +
a + b+
a+ + +b
a + +b
a+ + b + c

let name = age[5]
let name = age(5, 8)
let name = age.name
let name = age()[5]
let name = age(), f name 
let name = age(), f name.age 
let name = age(), f name (age) name
let name = age(), f name.age(/name/)
let name = age(), /s+[a-z]+/

let name = ref []
let name = const (2 + 56)

type Teacher <: Human
fun person(var name, var age)
fun person(var name, var age): name

abst Color: Blue | Green | Red

abst Color:
    # colors
    var isHex
    Blue | Green | Yellow
    
abst Color:
    var isHex
    let name
    | Blue(name, age)
    | Green
    | Yellow
  
# type Person: name

fun person(var name, var age)

type Person(name, age):
    var name 

var person = { name: "John" }
var a_34456_bc = 123.6
var bb = 2.337
let z = 0.07
let y = 0e+7
let r = 89.8e-7
let d = 0xFF676p-78
let x = 0x666
let x = 0b1100
let y = 0b0.01
let d = 23_890
let d = ...name
let y = 0o55_667 
var c556ht = var yy667 = 65

var name = a. + name.b.age.game
var name = a. + ..b
var name = ..b
var name = a.
var name = b.|x, y|
var name = b[5]
var name = b[5](4, 5).|x, y|.|a + b|.age
var name = person..name, ..age
let name = person..name, ...age + 67e56
let name = iso person..name, ..age

let name = 5 if name == 56 else 7

fun sth(): 6, 'hello'

fun boss(name:4, age:"John"): name if x >= y

var xx =
    # this is  
    # is war
    var yyy = 7 # badass
    # war for the common fellow

let yy_0y = 
    let x = 6
    # hello
    # holla 
    # amigos

var x = "Ho"

let name = fun _(a, b, c):
    print "this is what I'm saying"

let jane = doe

let mark = 
    let jane = 67

fun swap(a:5, b:6): 
    var a, b = b, a 
    # hello
    print a, b
    for a in [1:3]: print "Hello"
    for a in list: print "Hello"
    if var a <- 5: print "Hello"
    (2 + 3) name 

macro 
    add(a, b): a + b  
    sub(a, b): a - b  
    div(a, b): a / b 

fun anagram():  a + b 


fun 
    add(a, b): a + b  
    sub(a, b): a - b  
    div(a, b): x

let 
    name = 56
    age  = "Hi"

type 
    Player(name, age)
    Game'(player, board)

# Test for the cause of junk in value 
let brain = 0b1101

let thor = "Chris Hemsworth"

abst Name: 
    | Name(a, b.) | Game'
    let name = 90
    # nothing
    # nothing
    | Day 

# Diverse 
let 
    age, sex', country = /hello/
    ...name', height', year = 5678

let sassy' =
    let brain = 0b1101


fun name(a, b): a + b


type Person(a, b)

type Person: 
    var name, age
